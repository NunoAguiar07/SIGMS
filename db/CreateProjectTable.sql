CREATE TABLE IF NOT EXISTS USERS (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    profile_image VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS STUDENT (
    user_id INT UNIQUE NOT NULL REFERENCES USERS(id) ON DELETE CASCADE,
    primary key (user_id)

);

CREATE TABLE IF NOT EXISTS TEACHER (
     user_id INT UNIQUE NOT NULL REFERENCES USERS(id) ON DELETE CASCADE,
     primary key (user_id)
);

CREATE TABLE IF NOT EXISTS TECHNICAL_SERVICES (
    user_id INT UNIQUE NOT NULL REFERENCES USERS(id) ON DELETE CASCADE,
    primary key (user_id)
);

CREATE TABLE IF NOT EXISTS ADMIN (
    user_id INT UNIQUE NOT NULL REFERENCES USERS(id) ON DELETE CASCADE,
    primary key (user_id)
);

CREATE TABLE IF NOT EXISTS SUBJECT (
     id SERIAL PRIMARY KEY,
     subject_name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS CLASS (
    id SERIAL PRIMARY KEY,
    subject_id INT NOT NULL REFERENCES SUBJECT(id) ON DELETE CASCADE,
    class_type VARCHAR(20) CHECK (class_type IN ('theoretical', 'practical')),
    start_time bigint NOT NULL,
    end_time bigint NOT NULL,
    CHECK (end_time > start_time)
);

CREATE TABLE IF NOT EXISTS ROOM (
    id SERIAL PRIMARY KEY,
    capacity INT NOT NULL,
    CHECK(capacity > 0)
);

CREATE TABLE IF NOT EXISTS STUDY_ROOM (
    id SERIAL PRIMARY KEY REFERENCES ROOM(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS CLASSROOM (
    id SERIAL PRIMARY KEY REFERENCES ROOM(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS OFFICE_ROOM (
    id SERIAL PRIMARY KEY REFERENCES ROOM(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LECTURE (
    id SERIAL PRIMARY KEY,
    class_id INT NOT NULL REFERENCES CLASS(id) ON DELETE CASCADE,
    room_id INT NOT NULL REFERENCES ROOM(id) ON DELETE CASCADE,
    duration VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS ISSUE_REPORT (
    id SERIAL PRIMARY KEY,
    room_id INT NOT NULL REFERENCES ROOM(id) ON DELETE CASCADE,
    description TEXT NOT NULL
);

