name: Build and Deploy

on:
  push:
    paths:
      - 'backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradle wrapper executable
      run: chmod +x ./gradlew
      working-directory: backend
      
    - name: Build Kotlin project
      run: ./gradlew clean build
      working-directory: backend
      
    - name: Build JAR
      run: ./gradlew jar
      working-directory: backend
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Set up Google Cloud credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: rising-city-464516-e8

    - name: Set up QEMU (for cross-platform builds)
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: backend
        push: true
        platforms: linux/amd64, linux/arm64
        tags: europe-west1-docker.pkg.dev/rising-city-464516-e8/sigms/backend:latest

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: sigms
        location: europe-west1
        project_id: rising-city-464516-e8

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f deployment.yaml

    - name: Restart deployment rollout
      run: |
        kubectl rollout restart deployment/backend -n sigms
        kubectl rollout status deployment/backend -n sigms
